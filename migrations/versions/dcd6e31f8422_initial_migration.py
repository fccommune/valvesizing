"""Initial migration.

Revision ID: dcd6e31f8422
Revises: 
Create Date: 2024-02-27 16:18:17.639408

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'dcd6e31f8422'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('OTP',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=True),
    sa.Column('otp', sa.BigInteger(), nullable=True),
    sa.Column('time', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('afr',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('manufacturer', sa.String(length=200), nullable=True),
    sa.Column('series', sa.String(length=200), nullable=True),
    sa.Column('moc', sa.String(length=200), nullable=True),
    sa.Column('size', sa.String(length=200), nullable=True),
    sa.Column('drain', sa.String(length=200), nullable=True),
    sa.Column('filter_size', sa.String(length=200), nullable=True),
    sa.Column('relive', sa.String(length=200), nullable=True),
    sa.Column('pressure_range', sa.String(length=200), nullable=True),
    sa.Column('fluid', sa.String(length=200), nullable=True),
    sa.Column('model', sa.String(length=200), nullable=True),
    sa.Column('remarks', sa.String(length=300), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('applicationMaster',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('balanceSeal',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=300), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('balancing',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=300), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('bonnet',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=300), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('bonnetType',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=300), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cageClamp',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=300), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('certification',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cleaning',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('companyMaster',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=300), nullable=True),
    sa.Column('description', sa.String(length=300), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('departmentMaster',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=300), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('designStandard',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('designationMaster',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=300), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('endConnection',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=300), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('endFinish',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=300), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('engineerMaster',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=300), nullable=True),
    sa.Column('designation', sa.String(length=300), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('flowCharacter',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=300), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('flowDirection',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=300), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('fluidProperties',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('fluidState', sa.String(length=100), nullable=True),
    sa.Column('fluidName', sa.String(length=100), nullable=True),
    sa.Column('specificGravity', sa.Float(), nullable=True),
    sa.Column('vaporPressure', sa.Float(), nullable=True),
    sa.Column('viscosity', sa.Float(), nullable=True),
    sa.Column('criticalPressure', sa.Float(), nullable=True),
    sa.Column('molecularWeight', sa.Float(), nullable=True),
    sa.Column('specificHeatRatio', sa.Float(), nullable=True),
    sa.Column('compressibilityFactor', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('fluidState',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('gasket',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=300), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('hwThrust',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('failAction', sa.String(length=20), nullable=True),
    sa.Column('mount', sa.String(length=20), nullable=True),
    sa.Column('ac_size', sa.String(length=20), nullable=True),
    sa.Column('max_thrust', sa.String(length=20), nullable=True),
    sa.Column('dia', sa.String(length=20), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('industryMaster',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=300), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('limitSwitch',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('make', sa.String(length=200), nullable=True),
    sa.Column('explosion', sa.String(length=200), nullable=True),
    sa.Column('moc', sa.String(length=200), nullable=True),
    sa.Column('sensor', sa.String(length=200), nullable=True),
    sa.Column('display', sa.String(length=200), nullable=True),
    sa.Column('model', sa.String(length=200), nullable=True),
    sa.Column('remark', sa.String(length=200), nullable=True),
    sa.Column('pressure_range', sa.String(length=200), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('materialMaster',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('nde1',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=300), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('nde2',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=300), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notesMaster',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('notesNumber', sa.String(length=10), nullable=True),
    sa.Column('content', sa.String(length=300), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('packingType',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=300), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('paintCerts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('paintFinish',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pipeArea',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nominalDia', sa.Float(), nullable=True),
    sa.Column('nominalPipeSize', sa.Float(), nullable=True),
    sa.Column('outerDia', sa.Float(), nullable=True),
    sa.Column('thickness', sa.Float(), nullable=True),
    sa.Column('area', sa.Float(), nullable=True),
    sa.Column('schedule', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('portArea',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('model', sa.String(length=20), nullable=True),
    sa.Column('v_size', sa.String(length=20), nullable=True),
    sa.Column('seat_bore', sa.String(length=20), nullable=True),
    sa.Column('travel', sa.String(length=20), nullable=True),
    sa.Column('trim_type', sa.String(length=20), nullable=True),
    sa.Column('flow_char', sa.String(length=20), nullable=True),
    sa.Column('area', sa.String(length=20), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('positioner',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('std', sa.String(length=200), nullable=True),
    sa.Column('manufacturer', sa.String(length=200), nullable=True),
    sa.Column('series', sa.String(length=200), nullable=True),
    sa.Column('moc', sa.String(length=200), nullable=True),
    sa.Column('enclosure', sa.String(length=200), nullable=True),
    sa.Column('spool_valve', sa.String(length=200), nullable=True),
    sa.Column('type', sa.String(length=200), nullable=True),
    sa.Column('technology', sa.String(length=200), nullable=True),
    sa.Column('communication', sa.String(length=200), nullable=True),
    sa.Column('action', sa.String(length=200), nullable=True),
    sa.Column('actions', sa.String(length=200), nullable=True),
    sa.Column('certificate', sa.String(length=200), nullable=True),
    sa.Column('model_no', sa.String(length=200), nullable=True),
    sa.Column('haz_class', sa.String(length=200), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('positionerSignal',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ratingMaster',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('regionMaster',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=300), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('rotaryActuatorData',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('actType', sa.String(length=100), nullable=True),
    sa.Column('failAction', sa.String(length=100), nullable=True),
    sa.Column('valveInterface', sa.String(length=100), nullable=True),
    sa.Column('actSize_', sa.String(length=100), nullable=True),
    sa.Column('actSize', sa.Float(), nullable=True),
    sa.Column('springSet', sa.Integer(), nullable=True),
    sa.Column('torqueType', sa.String(length=100), nullable=True),
    sa.Column('setPressure', sa.String(length=100), nullable=True),
    sa.Column('start', sa.Float(), nullable=True),
    sa.Column('mid', sa.Float(), nullable=True),
    sa.Column('end', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('seatLeakageClass',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=300), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('seatingTorque',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('discDia', sa.Float(), nullable=True),
    sa.Column('valveSize', sa.Float(), nullable=True),
    sa.Column('cusc', sa.Float(), nullable=True),
    sa.Column('cusp', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('slidingActuatorData',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('actType', sa.String(length=100), nullable=True),
    sa.Column('failAction', sa.String(length=100), nullable=True),
    sa.Column('stemDia', sa.Float(), nullable=True),
    sa.Column('yokeBossDia', sa.Float(), nullable=True),
    sa.Column('actSize', sa.String(length=100), nullable=True),
    sa.Column('effectiveArea', sa.Float(), nullable=True),
    sa.Column('travel', sa.Float(), nullable=True),
    sa.Column('sMin', sa.Float(), nullable=True),
    sa.Column('sMax', sa.Float(), nullable=True),
    sa.Column('springRate', sa.Float(), nullable=True),
    sa.Column('VO', sa.Float(), nullable=True),
    sa.Column('VM', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('solenoid',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('standard', sa.String(length=200), nullable=True),
    sa.Column('make', sa.String(length=200), nullable=True),
    sa.Column('series', sa.String(length=200), nullable=True),
    sa.Column('size', sa.String(length=200), nullable=True),
    sa.Column('type', sa.String(length=200), nullable=True),
    sa.Column('orifice', sa.String(length=200), nullable=True),
    sa.Column('cv', sa.String(length=200), nullable=True),
    sa.Column('model', sa.String(length=200), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('studNut',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=300), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('valveArea',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('rating', sa.String(length=300), nullable=True),
    sa.Column('nominalPipeSize', sa.String(length=300), nullable=True),
    sa.Column('inMM', sa.String(length=300), nullable=True),
    sa.Column('inInch', sa.String(length=300), nullable=True),
    sa.Column('area', sa.String(length=300), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('valveStyle',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('addressMaster',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('address', sa.String(length=300), nullable=True),
    sa.Column('customerCode', sa.String(length=15), nullable=True),
    sa.Column('isActive', sa.Boolean(), nullable=True),
    sa.Column('companyId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['companyId'], ['companyMaster.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('disc',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('valveStyleId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['valveStyleId'], ['valveStyle.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('packing',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('valveStyleId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['valveStyleId'], ['valveStyle.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pressureTempRating',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('maxTemp', sa.Float(), nullable=True),
    sa.Column('minTemp', sa.Float(), nullable=True),
    sa.Column('pressure', sa.Float(), nullable=True),
    sa.Column('materialId', sa.Integer(), nullable=True),
    sa.Column('ratingId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['materialId'], ['materialMaster.id'], ),
    sa.ForeignKeyConstraint(['ratingId'], ['ratingMaster.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('seat',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('valveStyleId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['valveStyleId'], ['valveStyle.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('shaft',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('yield_strength', sa.Float(), nullable=True),
    sa.Column('valveStyleId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['valveStyleId'], ['valveStyle.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('trimType',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=300), nullable=True),
    sa.Column('valveStyleId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['valveStyleId'], ['valveStyle.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('userMaster',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=1000), nullable=True),
    sa.Column('password', sa.String(length=100), nullable=True),
    sa.Column('employeeId', sa.String(length=100), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('mobile', sa.String(length=100), nullable=True),
    sa.Column('fccUser', sa.Boolean(), nullable=True),
    sa.Column('departmentId', sa.Integer(), nullable=True),
    sa.Column('designationId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['departmentId'], ['departmentMaster.id'], ),
    sa.ForeignKeyConstraint(['designationId'], ['designationMaster.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('cvTable',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('valveSize', sa.Float(), nullable=True),
    sa.Column('series', sa.String(length=50), nullable=True),
    sa.Column('trimTypeId', sa.Integer(), nullable=True),
    sa.Column('flowCharacId', sa.Integer(), nullable=True),
    sa.Column('flowDirId', sa.Integer(), nullable=True),
    sa.Column('balancingId', sa.Integer(), nullable=True),
    sa.Column('ratingId', sa.Integer(), nullable=True),
    sa.Column('valveStyleId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['balancingId'], ['balancing.id'], ),
    sa.ForeignKeyConstraint(['flowCharacId'], ['flowCharacter.id'], ),
    sa.ForeignKeyConstraint(['flowDirId'], ['flowDirection.id'], ),
    sa.ForeignKeyConstraint(['ratingId'], ['ratingMaster.id'], ),
    sa.ForeignKeyConstraint(['trimTypeId'], ['trimType.id'], ),
    sa.ForeignKeyConstraint(['valveStyleId'], ['valveStyle.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('knValue',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('portDia', sa.Float(), nullable=True),
    sa.Column('value', sa.Float(), nullable=True),
    sa.Column('trimTypeId', sa.Integer(), nullable=True),
    sa.Column('flowCharacId', sa.Integer(), nullable=True),
    sa.Column('flowDirId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['flowCharacId'], ['flowCharacter.id'], ),
    sa.ForeignKeyConstraint(['flowDirId'], ['flowDirection.id'], ),
    sa.ForeignKeyConstraint(['trimTypeId'], ['trimType.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('packingFriction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('stemDia', sa.Float(), nullable=True),
    sa.Column('value', sa.Float(), nullable=True),
    sa.Column('ratingId', sa.Integer(), nullable=True),
    sa.Column('packingMaterialId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['packingMaterialId'], ['packing.id'], ),
    sa.ForeignKeyConstraint(['ratingId'], ['ratingMaster.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('projectMaster',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('projectId', sa.String(length=100), nullable=True),
    sa.Column('projectRef', sa.String(length=100), nullable=True),
    sa.Column('enquiryRef', sa.String(length=100), nullable=True),
    sa.Column('enquiryReceivedDate', sa.DateTime(), nullable=True),
    sa.Column('receiptDate', sa.DateTime(), nullable=True),
    sa.Column('bidDueDate', sa.DateTime(), nullable=True),
    sa.Column('purpose', sa.String(length=100), nullable=True),
    sa.Column('custPoNo', sa.String(length=100), nullable=True),
    sa.Column('workOderNo', sa.String(length=100), nullable=True),
    sa.Column('revisionNo', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=100), nullable=True),
    sa.Column('pressureUnit', sa.String(length=50), nullable=True),
    sa.Column('flowrateUnit', sa.String(length=50), nullable=True),
    sa.Column('temperatureUnit', sa.String(length=50), nullable=True),
    sa.Column('lengthUnit', sa.String(length=50), nullable=True),
    sa.Column('createdById', sa.Integer(), nullable=True),
    sa.Column('IndustryId', sa.Integer(), nullable=True),
    sa.Column('regionID', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['IndustryId'], ['industryMaster.id'], ),
    sa.ForeignKeyConstraint(['createdById'], ['userMaster.id'], ),
    sa.ForeignKeyConstraint(['regionID'], ['regionMaster.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('seatLoadForce',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('seatBore', sa.Float(), nullable=True),
    sa.Column('value', sa.Float(), nullable=True),
    sa.Column('trimTypeId', sa.Integer(), nullable=True),
    sa.Column('leakageClassId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['leakageClassId'], ['seatLeakageClass.id'], ),
    sa.ForeignKeyConstraint(['trimTypeId'], ['trimType.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('addressProject',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('isCompany', sa.Boolean(), nullable=True),
    sa.Column('addressId', sa.Integer(), nullable=True),
    sa.Column('projectId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['addressId'], ['addressMaster.id'], ),
    sa.ForeignKeyConstraint(['projectId'], ['projectMaster.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cvValues',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('coeff', sa.String(length=50), nullable=True),
    sa.Column('one', sa.Float(), nullable=True),
    sa.Column('two', sa.Float(), nullable=True),
    sa.Column('three', sa.Float(), nullable=True),
    sa.Column('four', sa.Float(), nullable=True),
    sa.Column('five', sa.Float(), nullable=True),
    sa.Column('six', sa.Float(), nullable=True),
    sa.Column('seven', sa.Float(), nullable=True),
    sa.Column('eight', sa.Float(), nullable=True),
    sa.Column('nine', sa.Float(), nullable=True),
    sa.Column('ten', sa.Float(), nullable=True),
    sa.Column('seatBore', sa.Float(), nullable=True),
    sa.Column('travel', sa.Float(), nullable=True),
    sa.Column('cvId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['cvId'], ['cvTable.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('engineerProject',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('isApplication', sa.Boolean(), nullable=True),
    sa.Column('engineerId', sa.Integer(), nullable=True),
    sa.Column('projectId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['engineerId'], ['engineerMaster.id'], ),
    sa.ForeignKeyConstraint(['projectId'], ['projectMaster.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('itemMaster',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('itemNumber', sa.Integer(), nullable=True),
    sa.Column('alternate', sa.String(length=50), nullable=True),
    sa.Column('projectID', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['projectID'], ['projectMaster.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('packingTorque',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('shaftDia', sa.Float(), nullable=True),
    sa.Column('ratingId', sa.Integer(), nullable=True),
    sa.Column('cvId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['cvId'], ['cvTable.id'], ),
    sa.ForeignKeyConstraint(['ratingId'], ['ratingMaster.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('projectNotes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('notesNumber', sa.String(length=300), nullable=True),
    sa.Column('notes', sa.String(length=300), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('projectId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['projectId'], ['projectMaster.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('accessoriesData',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('manufacturer', sa.String(length=200), nullable=True),
    sa.Column('model', sa.String(length=200), nullable=True),
    sa.Column('action', sa.String(length=200), nullable=True),
    sa.Column('afr', sa.String(length=200), nullable=True),
    sa.Column('transmitter', sa.String(length=200), nullable=True),
    sa.Column('limit', sa.String(length=200), nullable=True),
    sa.Column('proximity', sa.String(length=200), nullable=True),
    sa.Column('booster', sa.String(length=200), nullable=True),
    sa.Column('pilot_valve', sa.String(length=200), nullable=True),
    sa.Column('air_lock', sa.String(length=200), nullable=True),
    sa.Column('ip_make', sa.String(length=200), nullable=True),
    sa.Column('ip_model', sa.String(length=200), nullable=True),
    sa.Column('solenoid_make', sa.String(length=200), nullable=True),
    sa.Column('solenoid_model', sa.String(length=200), nullable=True),
    sa.Column('solenoid_action', sa.String(length=200), nullable=True),
    sa.Column('volume_tank', sa.String(length=200), nullable=True),
    sa.Column('ip_converter', sa.String(length=200), nullable=True),
    sa.Column('air_receiver', sa.String(length=200), nullable=True),
    sa.Column('tubing', sa.String(length=200), nullable=True),
    sa.Column('fittings', sa.String(length=200), nullable=True),
    sa.Column('cleaning', sa.String(length=200), nullable=True),
    sa.Column('certification', sa.String(length=200), nullable=True),
    sa.Column('paint_finish', sa.String(length=200), nullable=True),
    sa.Column('paint_cert', sa.String(length=200), nullable=True),
    sa.Column('sp1', sa.String(length=200), nullable=True),
    sa.Column('sp2', sa.String(length=200), nullable=True),
    sa.Column('sp3', sa.String(length=200), nullable=True),
    sa.Column('rm', sa.String(length=200), nullable=True),
    sa.Column('hydro', sa.String(length=200), nullable=True),
    sa.Column('final', sa.String(length=200), nullable=True),
    sa.Column('paint_inspect', sa.String(length=200), nullable=True),
    sa.Column('packing_inspect', sa.String(length=200), nullable=True),
    sa.Column('vt1', sa.String(length=200), nullable=True),
    sa.Column('vt2', sa.String(length=200), nullable=True),
    sa.Column('itemId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['itemId'], ['itemMaster.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('actuatorMaster',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('actuatorType', sa.String(length=100), nullable=True),
    sa.Column('springAction', sa.String(length=100), nullable=True),
    sa.Column('handWheel', sa.String(length=100), nullable=True),
    sa.Column('adjustableTravelStop', sa.String(length=100), nullable=True),
    sa.Column('orientation', sa.String(length=100), nullable=True),
    sa.Column('availableAirSupplyMin', sa.Float(), nullable=True),
    sa.Column('availableAirSupplyMax', sa.Float(), nullable=True),
    sa.Column('travelStops', sa.String(length=100), nullable=True),
    sa.Column('itemId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['itemId'], ['itemMaster.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('caseMaster',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('flowrate', sa.Float(), nullable=True),
    sa.Column('inletPressure', sa.Float(), nullable=True),
    sa.Column('outletPressure', sa.Float(), nullable=True),
    sa.Column('inletTemp', sa.Float(), nullable=True),
    sa.Column('vaporPressure', sa.Float(), nullable=True),
    sa.Column('specificGravity', sa.Float(), nullable=True),
    sa.Column('kinematicViscosity', sa.Float(), nullable=True),
    sa.Column('fl', sa.Float(), nullable=True),
    sa.Column('calculatedCv', sa.Float(), nullable=True),
    sa.Column('openingPercentage', sa.Float(), nullable=True),
    sa.Column('chokedDrop', sa.Float(), nullable=True),
    sa.Column('Ff', sa.Float(), nullable=True),
    sa.Column('Fp', sa.Float(), nullable=True),
    sa.Column('Flp', sa.Float(), nullable=True),
    sa.Column('kc', sa.Float(), nullable=True),
    sa.Column('ar', sa.Float(), nullable=True),
    sa.Column('spl', sa.Float(), nullable=True),
    sa.Column('reNumber', sa.Float(), nullable=True),
    sa.Column('pipeInVel', sa.Float(), nullable=True),
    sa.Column('pipeOutVel', sa.Float(), nullable=True),
    sa.Column('valveVel', sa.Float(), nullable=True),
    sa.Column('tex', sa.Float(), nullable=True),
    sa.Column('powerLevel', sa.Float(), nullable=True),
    sa.Column('requiredStages', sa.Float(), nullable=True),
    sa.Column('specificHeatRatio', sa.Float(), nullable=True),
    sa.Column('mw_sg', sa.String(length=50), nullable=True),
    sa.Column('molecularWeight', sa.Float(), nullable=True),
    sa.Column('compressibility', sa.Float(), nullable=True),
    sa.Column('x_delp', sa.Float(), nullable=True),
    sa.Column('fk', sa.Float(), nullable=True),
    sa.Column('y_expansion', sa.Float(), nullable=True),
    sa.Column('xt', sa.Float(), nullable=True),
    sa.Column('xtp', sa.Float(), nullable=True),
    sa.Column('fd', sa.Float(), nullable=True),
    sa.Column('machNoUp', sa.Float(), nullable=True),
    sa.Column('machNoDown', sa.Float(), nullable=True),
    sa.Column('machNoValve', sa.Float(), nullable=True),
    sa.Column('sonicVelUp', sa.Float(), nullable=True),
    sa.Column('sonicVelDown', sa.Float(), nullable=True),
    sa.Column('sonicVelValve', sa.Float(), nullable=True),
    sa.Column('outletDensity', sa.Float(), nullable=True),
    sa.Column('criticalPressure', sa.Float(), nullable=True),
    sa.Column('inletPipeSize', sa.Float(), nullable=True),
    sa.Column('outletPipeSize', sa.Float(), nullable=True),
    sa.Column('valveSize', sa.Float(), nullable=True),
    sa.Column('seatDia', sa.Float(), nullable=True),
    sa.Column('ratedCv', sa.Float(), nullable=True),
    sa.Column('inletPipeSchId', sa.Integer(), nullable=True),
    sa.Column('valveDiaId', sa.Integer(), nullable=True),
    sa.Column('itemId', sa.Integer(), nullable=True),
    sa.Column('fluidId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['fluidId'], ['fluidProperties.id'], ),
    sa.ForeignKeyConstraint(['inletPipeSchId'], ['pipeArea.id'], ),
    sa.ForeignKeyConstraint(['itemId'], ['itemMaster.id'], ),
    sa.ForeignKeyConstraint(['valveDiaId'], ['cvTable.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('itemNotesData',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content', sa.String(length=300), nullable=True),
    sa.Column('notesNumber', sa.String(length=300), nullable=True),
    sa.Column('itemId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['itemId'], ['itemMaster.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('valveDetailsMaster',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('tagNumber', sa.String(length=50), nullable=True),
    sa.Column('serialNumber', sa.String(length=50), nullable=True),
    sa.Column('shutOffDelP', sa.Float(), nullable=True),
    sa.Column('maxPressure', sa.Float(), nullable=True),
    sa.Column('maxTemp', sa.Float(), nullable=True),
    sa.Column('minTemp', sa.Float(), nullable=True),
    sa.Column('shutOffDelPUnit', sa.String(length=50), nullable=True),
    sa.Column('maxPressureUnit', sa.String(length=50), nullable=True),
    sa.Column('maxTempUnit', sa.String(length=50), nullable=True),
    sa.Column('minTempUnit', sa.String(length=50), nullable=True),
    sa.Column('bonnetExtDimension', sa.Float(), nullable=True),
    sa.Column('application', sa.String(length=150), nullable=True),
    sa.Column('itemId', sa.Integer(), nullable=True),
    sa.Column('ratingId', sa.Integer(), nullable=True),
    sa.Column('materialId', sa.Integer(), nullable=True),
    sa.Column('designStandardId', sa.Integer(), nullable=True),
    sa.Column('valveStyleId', sa.Integer(), nullable=True),
    sa.Column('fluidStateId', sa.Integer(), nullable=True),
    sa.Column('endConnectionId', sa.Integer(), nullable=True),
    sa.Column('endFinishId', sa.Integer(), nullable=True),
    sa.Column('bonnetTypeId', sa.Integer(), nullable=True),
    sa.Column('packingTypeId', sa.Integer(), nullable=True),
    sa.Column('trimTypeId', sa.Integer(), nullable=True),
    sa.Column('flowCharacterId', sa.Integer(), nullable=True),
    sa.Column('flowDirectionId', sa.Integer(), nullable=True),
    sa.Column('seatLeakageClassId', sa.Integer(), nullable=True),
    sa.Column('bonnetId', sa.Integer(), nullable=True),
    sa.Column('nde1Id', sa.Integer(), nullable=True),
    sa.Column('nde2Id', sa.Integer(), nullable=True),
    sa.Column('shaftId', sa.Integer(), nullable=True),
    sa.Column('discId', sa.Integer(), nullable=True),
    sa.Column('seatId', sa.Integer(), nullable=True),
    sa.Column('packingId', sa.Integer(), nullable=True),
    sa.Column('balanceSealId', sa.Integer(), nullable=True),
    sa.Column('studNutId', sa.Integer(), nullable=True),
    sa.Column('gasketId', sa.Integer(), nullable=True),
    sa.Column('cageId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['balanceSealId'], ['balanceSeal.id'], ),
    sa.ForeignKeyConstraint(['bonnetId'], ['bonnet.id'], ),
    sa.ForeignKeyConstraint(['bonnetTypeId'], ['bonnetType.id'], ),
    sa.ForeignKeyConstraint(['cageId'], ['cageClamp.id'], ),
    sa.ForeignKeyConstraint(['designStandardId'], ['designStandard.id'], ),
    sa.ForeignKeyConstraint(['discId'], ['disc.id'], ),
    sa.ForeignKeyConstraint(['endConnectionId'], ['endConnection.id'], ),
    sa.ForeignKeyConstraint(['endFinishId'], ['endFinish.id'], ),
    sa.ForeignKeyConstraint(['flowCharacterId'], ['flowCharacter.id'], ),
    sa.ForeignKeyConstraint(['flowDirectionId'], ['flowDirection.id'], ),
    sa.ForeignKeyConstraint(['fluidStateId'], ['fluidState.id'], ),
    sa.ForeignKeyConstraint(['gasketId'], ['gasket.id'], ),
    sa.ForeignKeyConstraint(['itemId'], ['itemMaster.id'], ),
    sa.ForeignKeyConstraint(['materialId'], ['materialMaster.id'], ),
    sa.ForeignKeyConstraint(['nde1Id'], ['nde1.id'], ),
    sa.ForeignKeyConstraint(['nde2Id'], ['nde2.id'], ),
    sa.ForeignKeyConstraint(['packingId'], ['packing.id'], ),
    sa.ForeignKeyConstraint(['packingTypeId'], ['packingType.id'], ),
    sa.ForeignKeyConstraint(['ratingId'], ['ratingMaster.id'], ),
    sa.ForeignKeyConstraint(['seatId'], ['seat.id'], ),
    sa.ForeignKeyConstraint(['seatLeakageClassId'], ['seatLeakageClass.id'], ),
    sa.ForeignKeyConstraint(['shaftId'], ['shaft.id'], ),
    sa.ForeignKeyConstraint(['studNutId'], ['studNut.id'], ),
    sa.ForeignKeyConstraint(['trimTypeId'], ['trimType.id'], ),
    sa.ForeignKeyConstraint(['valveStyleId'], ['valveStyle.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('actuatorCaseData',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('balancing', sa.String(length=100), nullable=True),
    sa.Column('unbalanceArea', sa.Float(), nullable=True),
    sa.Column('stemDia', sa.Float(), nullable=True),
    sa.Column('plugDia', sa.Float(), nullable=True),
    sa.Column('unbalanceForce', sa.Float(), nullable=True),
    sa.Column('fluidNeg', sa.Float(), nullable=True),
    sa.Column('valveThrustClose', sa.Float(), nullable=True),
    sa.Column('valveThrustOpen', sa.Float(), nullable=True),
    sa.Column('shutOffForce', sa.Float(), nullable=True),
    sa.Column('stemArea', sa.Float(), nullable=True),
    sa.Column('springWindUp', sa.Float(), nullable=True),
    sa.Column('maxSpringLoad', sa.Float(), nullable=True),
    sa.Column('setPressure', sa.Float(), nullable=True),
    sa.Column('actThrustClose', sa.Float(), nullable=True),
    sa.Column('actThrustOpen', sa.Float(), nullable=True),
    sa.Column('frictionBand', sa.Float(), nullable=True),
    sa.Column('reqHandwheelThrust', sa.Float(), nullable=True),
    sa.Column('thrust', sa.Float(), nullable=True),
    sa.Column('bushingCoeff', sa.Float(), nullable=True),
    sa.Column('packingFrictionCoeff', sa.Float(), nullable=True),
    sa.Column('aFactor', sa.Float(), nullable=True),
    sa.Column('bFactor', sa.Float(), nullable=True),
    sa.Column('packingRadialAxialStress', sa.Float(), nullable=True),
    sa.Column('packingSection', sa.Float(), nullable=True),
    sa.Column('seatingTorqueCalc', sa.Float(), nullable=True),
    sa.Column('packingTorqueCalc', sa.Float(), nullable=True),
    sa.Column('frictionTorqueCalc', sa.Float(), nullable=True),
    sa.Column('bto', sa.Float(), nullable=True),
    sa.Column('rto', sa.Float(), nullable=True),
    sa.Column('eto', sa.Float(), nullable=True),
    sa.Column('btc', sa.Float(), nullable=True),
    sa.Column('rtc', sa.Float(), nullable=True),
    sa.Column('etc', sa.Float(), nullable=True),
    sa.Column('mast', sa.Float(), nullable=True),
    sa.Column('setPressureR', sa.Float(), nullable=True),
    sa.Column('reqHandTorque', sa.Float(), nullable=True),
    sa.Column('actuatorMasterId', sa.Integer(), nullable=True),
    sa.Column('packingFrictionId', sa.Integer(), nullable=True),
    sa.Column('packingTorqueId', sa.Integer(), nullable=True),
    sa.Column('seatLoadId', sa.Integer(), nullable=True),
    sa.Column('seatingTorqueId', sa.Integer(), nullable=True),
    sa.Column('slidingActuatorId', sa.Integer(), nullable=True),
    sa.Column('rotaryActuatorId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['actuatorMasterId'], ['actuatorMaster.id'], ),
    sa.ForeignKeyConstraint(['packingFrictionId'], ['packingFriction.id'], ),
    sa.ForeignKeyConstraint(['packingTorqueId'], ['packingTorque.id'], ),
    sa.ForeignKeyConstraint(['rotaryActuatorId'], ['rotaryActuatorData.id'], ),
    sa.ForeignKeyConstraint(['seatLoadId'], ['seatLoadForce.id'], ),
    sa.ForeignKeyConstraint(['seatingTorqueId'], ['seatingTorque.id'], ),
    sa.ForeignKeyConstraint(['slidingActuatorId'], ['slidingActuatorData.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('actuatorCaseData')
    op.drop_table('valveDetailsMaster')
    op.drop_table('itemNotesData')
    op.drop_table('caseMaster')
    op.drop_table('actuatorMaster')
    op.drop_table('accessoriesData')
    op.drop_table('projectNotes')
    op.drop_table('packingTorque')
    op.drop_table('itemMaster')
    op.drop_table('engineerProject')
    op.drop_table('cvValues')
    op.drop_table('addressProject')
    op.drop_table('seatLoadForce')
    op.drop_table('projectMaster')
    op.drop_table('packingFriction')
    op.drop_table('knValue')
    op.drop_table('cvTable')
    op.drop_table('userMaster')
    op.drop_table('trimType')
    op.drop_table('shaft')
    op.drop_table('seat')
    op.drop_table('pressureTempRating')
    op.drop_table('packing')
    op.drop_table('disc')
    op.drop_table('addressMaster')
    op.drop_table('valveStyle')
    op.drop_table('valveArea')
    op.drop_table('studNut')
    op.drop_table('solenoid')
    op.drop_table('slidingActuatorData')
    op.drop_table('seatingTorque')
    op.drop_table('seatLeakageClass')
    op.drop_table('rotaryActuatorData')
    op.drop_table('regionMaster')
    op.drop_table('ratingMaster')
    op.drop_table('positionerSignal')
    op.drop_table('positioner')
    op.drop_table('portArea')
    op.drop_table('pipeArea')
    op.drop_table('paintFinish')
    op.drop_table('paintCerts')
    op.drop_table('packingType')
    op.drop_table('notesMaster')
    op.drop_table('nde2')
    op.drop_table('nde1')
    op.drop_table('materialMaster')
    op.drop_table('limitSwitch')
    op.drop_table('industryMaster')
    op.drop_table('hwThrust')
    op.drop_table('gasket')
    op.drop_table('fluidState')
    op.drop_table('fluidProperties')
    op.drop_table('flowDirection')
    op.drop_table('flowCharacter')
    op.drop_table('engineerMaster')
    op.drop_table('endFinish')
    op.drop_table('endConnection')
    op.drop_table('designationMaster')
    op.drop_table('designStandard')
    op.drop_table('departmentMaster')
    op.drop_table('companyMaster')
    op.drop_table('cleaning')
    op.drop_table('certification')
    op.drop_table('cageClamp')
    op.drop_table('bonnetType')
    op.drop_table('bonnet')
    op.drop_table('balancing')
    op.drop_table('balanceSeal')
    op.drop_table('applicationMaster')
    op.drop_table('afr')
    op.drop_table('OTP')
    # ### end Alembic commands ###
